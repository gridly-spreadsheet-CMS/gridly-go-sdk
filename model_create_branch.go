/*
Gridly API

Gridly API documentation

API version: 5.9.0
Contact: support@gridly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gridly

import (
	"encoding/json"
)

// CreateBranch struct for CreateBranch
type CreateBranch struct {
	Name string `json:"name"`
	Description *string `json:"description,omitempty"`
	CustomProperties map[string]map[string]interface{} `json:"customProperties,omitempty"`
	InheritGroupAccess *bool `json:"inheritGroupAccess,omitempty"`
	InheritAutomation *bool `json:"inheritAutomation,omitempty"`
	ViewId *string `json:"viewId,omitempty"`
}

// NewCreateBranch instantiates a new CreateBranch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBranch(name string) *CreateBranch {
	this := CreateBranch{}
	this.Name = name
	return &this
}

// NewCreateBranchWithDefaults instantiates a new CreateBranch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBranchWithDefaults() *CreateBranch {
	this := CreateBranch{}
	return &this
}

// GetName returns the Name field value
func (o *CreateBranch) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateBranch) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateBranch) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateBranch) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBranch) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateBranch) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateBranch) SetDescription(v string) {
	o.Description = &v
}

// GetCustomProperties returns the CustomProperties field value if set, zero value otherwise.
func (o *CreateBranch) GetCustomProperties() map[string]map[string]interface{} {
	if o == nil || isNil(o.CustomProperties) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.CustomProperties
}

// GetCustomPropertiesOk returns a tuple with the CustomProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBranch) GetCustomPropertiesOk() (map[string]map[string]interface{}, bool) {
	if o == nil || isNil(o.CustomProperties) {
    return map[string]map[string]interface{}{}, false
	}
	return o.CustomProperties, true
}

// HasCustomProperties returns a boolean if a field has been set.
func (o *CreateBranch) HasCustomProperties() bool {
	if o != nil && !isNil(o.CustomProperties) {
		return true
	}

	return false
}

// SetCustomProperties gets a reference to the given map[string]map[string]interface{} and assigns it to the CustomProperties field.
func (o *CreateBranch) SetCustomProperties(v map[string]map[string]interface{}) {
	o.CustomProperties = v
}

// GetInheritGroupAccess returns the InheritGroupAccess field value if set, zero value otherwise.
func (o *CreateBranch) GetInheritGroupAccess() bool {
	if o == nil || isNil(o.InheritGroupAccess) {
		var ret bool
		return ret
	}
	return *o.InheritGroupAccess
}

// GetInheritGroupAccessOk returns a tuple with the InheritGroupAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBranch) GetInheritGroupAccessOk() (*bool, bool) {
	if o == nil || isNil(o.InheritGroupAccess) {
    return nil, false
	}
	return o.InheritGroupAccess, true
}

// HasInheritGroupAccess returns a boolean if a field has been set.
func (o *CreateBranch) HasInheritGroupAccess() bool {
	if o != nil && !isNil(o.InheritGroupAccess) {
		return true
	}

	return false
}

// SetInheritGroupAccess gets a reference to the given bool and assigns it to the InheritGroupAccess field.
func (o *CreateBranch) SetInheritGroupAccess(v bool) {
	o.InheritGroupAccess = &v
}

// GetInheritAutomation returns the InheritAutomation field value if set, zero value otherwise.
func (o *CreateBranch) GetInheritAutomation() bool {
	if o == nil || isNil(o.InheritAutomation) {
		var ret bool
		return ret
	}
	return *o.InheritAutomation
}

// GetInheritAutomationOk returns a tuple with the InheritAutomation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBranch) GetInheritAutomationOk() (*bool, bool) {
	if o == nil || isNil(o.InheritAutomation) {
    return nil, false
	}
	return o.InheritAutomation, true
}

// HasInheritAutomation returns a boolean if a field has been set.
func (o *CreateBranch) HasInheritAutomation() bool {
	if o != nil && !isNil(o.InheritAutomation) {
		return true
	}

	return false
}

// SetInheritAutomation gets a reference to the given bool and assigns it to the InheritAutomation field.
func (o *CreateBranch) SetInheritAutomation(v bool) {
	o.InheritAutomation = &v
}

// GetViewId returns the ViewId field value if set, zero value otherwise.
func (o *CreateBranch) GetViewId() string {
	if o == nil || isNil(o.ViewId) {
		var ret string
		return ret
	}
	return *o.ViewId
}

// GetViewIdOk returns a tuple with the ViewId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBranch) GetViewIdOk() (*string, bool) {
	if o == nil || isNil(o.ViewId) {
    return nil, false
	}
	return o.ViewId, true
}

// HasViewId returns a boolean if a field has been set.
func (o *CreateBranch) HasViewId() bool {
	if o != nil && !isNil(o.ViewId) {
		return true
	}

	return false
}

// SetViewId gets a reference to the given string and assigns it to the ViewId field.
func (o *CreateBranch) SetViewId(v string) {
	o.ViewId = &v
}

func (o CreateBranch) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.CustomProperties) {
		toSerialize["customProperties"] = o.CustomProperties
	}
	if !isNil(o.InheritGroupAccess) {
		toSerialize["inheritGroupAccess"] = o.InheritGroupAccess
	}
	if !isNil(o.InheritAutomation) {
		toSerialize["inheritAutomation"] = o.InheritAutomation
	}
	if !isNil(o.ViewId) {
		toSerialize["viewId"] = o.ViewId
	}
	return json.Marshal(toSerialize)
}

type NullableCreateBranch struct {
	value *CreateBranch
	isSet bool
}

func (v NullableCreateBranch) Get() *CreateBranch {
	return v.value
}

func (v *NullableCreateBranch) Set(val *CreateBranch) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateBranch) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateBranch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateBranch(val *CreateBranch) *NullableCreateBranch {
	return &NullableCreateBranch{value: val, isSet: true}
}

func (v NullableCreateBranch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateBranch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


