/*
Gridly API

Gridly API documentation

API version: 5.9.0
Contact: support@gridly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gridly

import (
	"encoding/json"
	"time"
)

// GridSetting struct for GridSetting
type GridSetting struct {
	DefaultSourceLanguageStatus *string `json:"defaultSourceLanguageStatus,omitempty"`
	TranslatorCanViewAutomations *bool `json:"translatorCanViewAutomations,omitempty"`
	Categories []FileCategory `json:"categories,omitempty"`
	Metadata *map[string]string `json:"metadata,omitempty"`
	CreatedTime *time.Time `json:"createdTime,omitempty"`
	LastModifiedTime *time.Time `json:"lastModifiedTime,omitempty"`
	CreatedBy *string `json:"createdBy,omitempty"`
	LastModifiedBy *string `json:"lastModifiedBy,omitempty"`
}

// NewGridSetting instantiates a new GridSetting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGridSetting() *GridSetting {
	this := GridSetting{}
	return &this
}

// NewGridSettingWithDefaults instantiates a new GridSetting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGridSettingWithDefaults() *GridSetting {
	this := GridSetting{}
	return &this
}

// GetDefaultSourceLanguageStatus returns the DefaultSourceLanguageStatus field value if set, zero value otherwise.
func (o *GridSetting) GetDefaultSourceLanguageStatus() string {
	if o == nil || isNil(o.DefaultSourceLanguageStatus) {
		var ret string
		return ret
	}
	return *o.DefaultSourceLanguageStatus
}

// GetDefaultSourceLanguageStatusOk returns a tuple with the DefaultSourceLanguageStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridSetting) GetDefaultSourceLanguageStatusOk() (*string, bool) {
	if o == nil || isNil(o.DefaultSourceLanguageStatus) {
    return nil, false
	}
	return o.DefaultSourceLanguageStatus, true
}

// HasDefaultSourceLanguageStatus returns a boolean if a field has been set.
func (o *GridSetting) HasDefaultSourceLanguageStatus() bool {
	if o != nil && !isNil(o.DefaultSourceLanguageStatus) {
		return true
	}

	return false
}

// SetDefaultSourceLanguageStatus gets a reference to the given string and assigns it to the DefaultSourceLanguageStatus field.
func (o *GridSetting) SetDefaultSourceLanguageStatus(v string) {
	o.DefaultSourceLanguageStatus = &v
}

// GetTranslatorCanViewAutomations returns the TranslatorCanViewAutomations field value if set, zero value otherwise.
func (o *GridSetting) GetTranslatorCanViewAutomations() bool {
	if o == nil || isNil(o.TranslatorCanViewAutomations) {
		var ret bool
		return ret
	}
	return *o.TranslatorCanViewAutomations
}

// GetTranslatorCanViewAutomationsOk returns a tuple with the TranslatorCanViewAutomations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridSetting) GetTranslatorCanViewAutomationsOk() (*bool, bool) {
	if o == nil || isNil(o.TranslatorCanViewAutomations) {
    return nil, false
	}
	return o.TranslatorCanViewAutomations, true
}

// HasTranslatorCanViewAutomations returns a boolean if a field has been set.
func (o *GridSetting) HasTranslatorCanViewAutomations() bool {
	if o != nil && !isNil(o.TranslatorCanViewAutomations) {
		return true
	}

	return false
}

// SetTranslatorCanViewAutomations gets a reference to the given bool and assigns it to the TranslatorCanViewAutomations field.
func (o *GridSetting) SetTranslatorCanViewAutomations(v bool) {
	o.TranslatorCanViewAutomations = &v
}

// GetCategories returns the Categories field value if set, zero value otherwise.
func (o *GridSetting) GetCategories() []FileCategory {
	if o == nil || isNil(o.Categories) {
		var ret []FileCategory
		return ret
	}
	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridSetting) GetCategoriesOk() ([]FileCategory, bool) {
	if o == nil || isNil(o.Categories) {
    return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *GridSetting) HasCategories() bool {
	if o != nil && !isNil(o.Categories) {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []FileCategory and assigns it to the Categories field.
func (o *GridSetting) SetCategories(v []FileCategory) {
	o.Categories = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *GridSetting) GetMetadata() map[string]string {
	if o == nil || isNil(o.Metadata) {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridSetting) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || isNil(o.Metadata) {
    return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *GridSetting) HasMetadata() bool {
	if o != nil && !isNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *GridSetting) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *GridSetting) GetCreatedTime() time.Time {
	if o == nil || isNil(o.CreatedTime) {
		var ret time.Time
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridSetting) GetCreatedTimeOk() (*time.Time, bool) {
	if o == nil || isNil(o.CreatedTime) {
    return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *GridSetting) HasCreatedTime() bool {
	if o != nil && !isNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given time.Time and assigns it to the CreatedTime field.
func (o *GridSetting) SetCreatedTime(v time.Time) {
	o.CreatedTime = &v
}

// GetLastModifiedTime returns the LastModifiedTime field value if set, zero value otherwise.
func (o *GridSetting) GetLastModifiedTime() time.Time {
	if o == nil || isNil(o.LastModifiedTime) {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedTime
}

// GetLastModifiedTimeOk returns a tuple with the LastModifiedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridSetting) GetLastModifiedTimeOk() (*time.Time, bool) {
	if o == nil || isNil(o.LastModifiedTime) {
    return nil, false
	}
	return o.LastModifiedTime, true
}

// HasLastModifiedTime returns a boolean if a field has been set.
func (o *GridSetting) HasLastModifiedTime() bool {
	if o != nil && !isNil(o.LastModifiedTime) {
		return true
	}

	return false
}

// SetLastModifiedTime gets a reference to the given time.Time and assigns it to the LastModifiedTime field.
func (o *GridSetting) SetLastModifiedTime(v time.Time) {
	o.LastModifiedTime = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *GridSetting) GetCreatedBy() string {
	if o == nil || isNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridSetting) GetCreatedByOk() (*string, bool) {
	if o == nil || isNil(o.CreatedBy) {
    return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *GridSetting) HasCreatedBy() bool {
	if o != nil && !isNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *GridSetting) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetLastModifiedBy returns the LastModifiedBy field value if set, zero value otherwise.
func (o *GridSetting) GetLastModifiedBy() string {
	if o == nil || isNil(o.LastModifiedBy) {
		var ret string
		return ret
	}
	return *o.LastModifiedBy
}

// GetLastModifiedByOk returns a tuple with the LastModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridSetting) GetLastModifiedByOk() (*string, bool) {
	if o == nil || isNil(o.LastModifiedBy) {
    return nil, false
	}
	return o.LastModifiedBy, true
}

// HasLastModifiedBy returns a boolean if a field has been set.
func (o *GridSetting) HasLastModifiedBy() bool {
	if o != nil && !isNil(o.LastModifiedBy) {
		return true
	}

	return false
}

// SetLastModifiedBy gets a reference to the given string and assigns it to the LastModifiedBy field.
func (o *GridSetting) SetLastModifiedBy(v string) {
	o.LastModifiedBy = &v
}

func (o GridSetting) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.DefaultSourceLanguageStatus) {
		toSerialize["defaultSourceLanguageStatus"] = o.DefaultSourceLanguageStatus
	}
	if !isNil(o.TranslatorCanViewAutomations) {
		toSerialize["translatorCanViewAutomations"] = o.TranslatorCanViewAutomations
	}
	if !isNil(o.Categories) {
		toSerialize["categories"] = o.Categories
	}
	if !isNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !isNil(o.CreatedTime) {
		toSerialize["createdTime"] = o.CreatedTime
	}
	if !isNil(o.LastModifiedTime) {
		toSerialize["lastModifiedTime"] = o.LastModifiedTime
	}
	if !isNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !isNil(o.LastModifiedBy) {
		toSerialize["lastModifiedBy"] = o.LastModifiedBy
	}
	return json.Marshal(toSerialize)
}

type NullableGridSetting struct {
	value *GridSetting
	isSet bool
}

func (v NullableGridSetting) Get() *GridSetting {
	return v.value
}

func (v *NullableGridSetting) Set(val *GridSetting) {
	v.value = val
	v.isSet = true
}

func (v NullableGridSetting) IsSet() bool {
	return v.isSet
}

func (v *NullableGridSetting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGridSetting(val *GridSetting) *NullableGridSetting {
	return &NullableGridSetting{value: val, isSet: true}
}

func (v NullableGridSetting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGridSetting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


