/*
Gridly API

Gridly API documentation

API version: 5.9.0
Contact: support@gridly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gridly

import (
	"encoding/json"
)

// UpdateCategory struct for UpdateCategory
type UpdateCategory struct {
	Name string `json:"name"`
}

// NewUpdateCategory instantiates a new UpdateCategory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateCategory(name string) *UpdateCategory {
	this := UpdateCategory{}
	this.Name = name
	return &this
}

// NewUpdateCategoryWithDefaults instantiates a new UpdateCategory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateCategoryWithDefaults() *UpdateCategory {
	this := UpdateCategory{}
	return &this
}

// GetName returns the Name field value
func (o *UpdateCategory) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UpdateCategory) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UpdateCategory) SetName(v string) {
	o.Name = v
}

func (o UpdateCategory) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateCategory struct {
	value *UpdateCategory
	isSet bool
}

func (v NullableUpdateCategory) Get() *UpdateCategory {
	return v.value
}

func (v *NullableUpdateCategory) Set(val *UpdateCategory) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateCategory) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateCategory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateCategory(val *UpdateCategory) *NullableUpdateCategory {
	return &NullableUpdateCategory{value: val, isSet: true}
}

func (v NullableUpdateCategory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateCategory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


